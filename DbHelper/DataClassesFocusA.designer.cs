#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DbHelperSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FPWork")]
	public partial class DataClassesFocusADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_SyncDB(tbl_SyncDB instance);
    partial void Updatetbl_SyncDB(tbl_SyncDB instance);
    partial void Deletetbl_SyncDB(tbl_SyncDB instance);
    #endregion
		
		public DataClassesFocusADataContext() : 
				base(global::DbHelperSQL.Properties.Settings.Default.FPWorkConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesFocusADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesFocusADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesFocusADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesFocusADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_SyncDB> tbl_SyncDBs
		{
			get
			{
				return this.GetTable<tbl_SyncDB>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_SyncDB")]
	public partial class tbl_SyncDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _CompName;
		
		private int _FPNumber;
		
		private string _DataServer;
		
		private string _DataBaseName;
		
		private int _Port;
		
		private string _MoxaIP;
		
		private System.Nullable<int> _MoxaPort;
		
		private string _TableName;
		
		private System.DateTime _DateTimeSyncDB;
		
		private System.Nullable<System.DateTime> _DataAddDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnCompNameChanging(string value);
    partial void OnCompNameChanged();
    partial void OnFPNumberChanging(int value);
    partial void OnFPNumberChanged();
    partial void OnDataServerChanging(string value);
    partial void OnDataServerChanged();
    partial void OnDataBaseNameChanging(string value);
    partial void OnDataBaseNameChanged();
    partial void OnPortChanging(int value);
    partial void OnPortChanged();
    partial void OnMoxaIPChanging(string value);
    partial void OnMoxaIPChanged();
    partial void OnMoxaPortChanging(System.Nullable<int> value);
    partial void OnMoxaPortChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnDateTimeSyncDBChanging(System.DateTime value);
    partial void OnDateTimeSyncDBChanged();
    partial void OnDataAddDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDataAddDateTimeChanged();
    #endregion
		
		public tbl_SyncDB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this.OnCompNameChanging(value);
					this.SendPropertyChanging();
					this._CompName = value;
					this.SendPropertyChanged("CompName");
					this.OnCompNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FPNumber", DbType="Int NOT NULL")]
		public int FPNumber
		{
			get
			{
				return this._FPNumber;
			}
			set
			{
				if ((this._FPNumber != value))
				{
					this.OnFPNumberChanging(value);
					this.SendPropertyChanging();
					this._FPNumber = value;
					this.SendPropertyChanged("FPNumber");
					this.OnFPNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataServer", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string DataServer
		{
			get
			{
				return this._DataServer;
			}
			set
			{
				if ((this._DataServer != value))
				{
					this.OnDataServerChanging(value);
					this.SendPropertyChanging();
					this._DataServer = value;
					this.SendPropertyChanged("DataServer");
					this.OnDataServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataBaseName", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string DataBaseName
		{
			get
			{
				return this._DataBaseName;
			}
			set
			{
				if ((this._DataBaseName != value))
				{
					this.OnDataBaseNameChanging(value);
					this.SendPropertyChanging();
					this._DataBaseName = value;
					this.SendPropertyChanged("DataBaseName");
					this.OnDataBaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int NOT NULL")]
		public int Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoxaIP", DbType="NVarChar(1024)")]
		public string MoxaIP
		{
			get
			{
				return this._MoxaIP;
			}
			set
			{
				if ((this._MoxaIP != value))
				{
					this.OnMoxaIPChanging(value);
					this.SendPropertyChanging();
					this._MoxaIP = value;
					this.SendPropertyChanged("MoxaIP");
					this.OnMoxaIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoxaPort", DbType="Int")]
		public System.Nullable<int> MoxaPort
		{
			get
			{
				return this._MoxaPort;
			}
			set
			{
				if ((this._MoxaPort != value))
				{
					this.OnMoxaPortChanging(value);
					this.SendPropertyChanging();
					this._MoxaPort = value;
					this.SendPropertyChanged("MoxaPort");
					this.OnMoxaPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeSyncDB", DbType="DateTime NOT NULL")]
		public System.DateTime DateTimeSyncDB
		{
			get
			{
				return this._DateTimeSyncDB;
			}
			set
			{
				if ((this._DateTimeSyncDB != value))
				{
					this.OnDateTimeSyncDBChanging(value);
					this.SendPropertyChanging();
					this._DateTimeSyncDB = value;
					this.SendPropertyChanged("DateTimeSyncDB");
					this.OnDateTimeSyncDBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataAddDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataAddDateTime
		{
			get
			{
				return this._DataAddDateTime;
			}
			set
			{
				if ((this._DataAddDateTime != value))
				{
					this.OnDataAddDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DataAddDateTime = value;
					this.SendPropertyChanged("DataAddDateTime");
					this.OnDataAddDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
