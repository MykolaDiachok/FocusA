#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyncOpenStore
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProcessingServer")]
	public partial class DataClassesOS_ROOTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACCOUNT(ACCOUNT instance);
    partial void UpdateACCOUNT(ACCOUNT instance);
    partial void DeleteACCOUNT(ACCOUNT instance);
    #endregion
		
		public DataClassesOS_ROOTDataContext() : 
				base(global::SyncOpenStore.Properties.Settings.Default.ProcessingServerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesOS_ROOTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesOS_ROOTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesOS_ROOTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesOS_ROOTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACCOUNT> ACCOUNTs
		{
			get
			{
				return this.GetTable<ACCOUNT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT")]
	public partial class ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ACCOUNTID1;
		
		private long _ACCOUNTID2;
		
		private int _ACCOUNTTYPEID;
		
		private int _CLNTID;
		
		private int _CURRENCYID;
		
		private decimal _ACCOUNTSUM;
		
		private decimal _MAXCREDIT;
		
		private short _ISBLOCKED;
		
		private short _ISLOCAL;
		
		private short _ISCLOSED;
		
		private long _OPENTIME;
		
		private System.Nullable<long> _CLOSETIME;
		
		private string _DESCRIPTION;
		
		private int _SYNCSTATUSFLAG;
		
		private long _UPDATENUM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACCOUNTID1Changing(long value);
    partial void OnACCOUNTID1Changed();
    partial void OnACCOUNTID2Changing(long value);
    partial void OnACCOUNTID2Changed();
    partial void OnACCOUNTTYPEIDChanging(int value);
    partial void OnACCOUNTTYPEIDChanged();
    partial void OnCLNTIDChanging(int value);
    partial void OnCLNTIDChanged();
    partial void OnCURRENCYIDChanging(int value);
    partial void OnCURRENCYIDChanged();
    partial void OnACCOUNTSUMChanging(decimal value);
    partial void OnACCOUNTSUMChanged();
    partial void OnMAXCREDITChanging(decimal value);
    partial void OnMAXCREDITChanged();
    partial void OnISBLOCKEDChanging(short value);
    partial void OnISBLOCKEDChanged();
    partial void OnISLOCALChanging(short value);
    partial void OnISLOCALChanged();
    partial void OnISCLOSEDChanging(short value);
    partial void OnISCLOSEDChanged();
    partial void OnOPENTIMEChanging(long value);
    partial void OnOPENTIMEChanged();
    partial void OnCLOSETIMEChanging(System.Nullable<long> value);
    partial void OnCLOSETIMEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnSYNCSTATUSFLAGChanging(int value);
    partial void OnSYNCSTATUSFLAGChanged();
    partial void OnUPDATENUMChanging(long value);
    partial void OnUPDATENUMChanged();
    #endregion
		
		public ACCOUNT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCOUNTID1", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ACCOUNTID1
		{
			get
			{
				return this._ACCOUNTID1;
			}
			set
			{
				if ((this._ACCOUNTID1 != value))
				{
					this.OnACCOUNTID1Changing(value);
					this.SendPropertyChanging();
					this._ACCOUNTID1 = value;
					this.SendPropertyChanged("ACCOUNTID1");
					this.OnACCOUNTID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCOUNTID2", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ACCOUNTID2
		{
			get
			{
				return this._ACCOUNTID2;
			}
			set
			{
				if ((this._ACCOUNTID2 != value))
				{
					this.OnACCOUNTID2Changing(value);
					this.SendPropertyChanging();
					this._ACCOUNTID2 = value;
					this.SendPropertyChanged("ACCOUNTID2");
					this.OnACCOUNTID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCOUNTTYPEID", DbType="Int NOT NULL")]
		public int ACCOUNTTYPEID
		{
			get
			{
				return this._ACCOUNTTYPEID;
			}
			set
			{
				if ((this._ACCOUNTTYPEID != value))
				{
					this.OnACCOUNTTYPEIDChanging(value);
					this.SendPropertyChanging();
					this._ACCOUNTTYPEID = value;
					this.SendPropertyChanged("ACCOUNTTYPEID");
					this.OnACCOUNTTYPEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLNTID", DbType="Int NOT NULL")]
		public int CLNTID
		{
			get
			{
				return this._CLNTID;
			}
			set
			{
				if ((this._CLNTID != value))
				{
					this.OnCLNTIDChanging(value);
					this.SendPropertyChanging();
					this._CLNTID = value;
					this.SendPropertyChanged("CLNTID");
					this.OnCLNTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRENCYID", DbType="Int NOT NULL")]
		public int CURRENCYID
		{
			get
			{
				return this._CURRENCYID;
			}
			set
			{
				if ((this._CURRENCYID != value))
				{
					this.OnCURRENCYIDChanging(value);
					this.SendPropertyChanging();
					this._CURRENCYID = value;
					this.SendPropertyChanged("CURRENCYID");
					this.OnCURRENCYIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCOUNTSUM", DbType="Decimal(18,6) NOT NULL")]
		public decimal ACCOUNTSUM
		{
			get
			{
				return this._ACCOUNTSUM;
			}
			set
			{
				if ((this._ACCOUNTSUM != value))
				{
					this.OnACCOUNTSUMChanging(value);
					this.SendPropertyChanging();
					this._ACCOUNTSUM = value;
					this.SendPropertyChanged("ACCOUNTSUM");
					this.OnACCOUNTSUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAXCREDIT", DbType="Decimal(18,6) NOT NULL")]
		public decimal MAXCREDIT
		{
			get
			{
				return this._MAXCREDIT;
			}
			set
			{
				if ((this._MAXCREDIT != value))
				{
					this.OnMAXCREDITChanging(value);
					this.SendPropertyChanging();
					this._MAXCREDIT = value;
					this.SendPropertyChanged("MAXCREDIT");
					this.OnMAXCREDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBLOCKED", DbType="SmallInt NOT NULL")]
		public short ISBLOCKED
		{
			get
			{
				return this._ISBLOCKED;
			}
			set
			{
				if ((this._ISBLOCKED != value))
				{
					this.OnISBLOCKEDChanging(value);
					this.SendPropertyChanging();
					this._ISBLOCKED = value;
					this.SendPropertyChanged("ISBLOCKED");
					this.OnISBLOCKEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISLOCAL", DbType="SmallInt NOT NULL")]
		public short ISLOCAL
		{
			get
			{
				return this._ISLOCAL;
			}
			set
			{
				if ((this._ISLOCAL != value))
				{
					this.OnISLOCALChanging(value);
					this.SendPropertyChanging();
					this._ISLOCAL = value;
					this.SendPropertyChanged("ISLOCAL");
					this.OnISLOCALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISCLOSED", DbType="SmallInt NOT NULL")]
		public short ISCLOSED
		{
			get
			{
				return this._ISCLOSED;
			}
			set
			{
				if ((this._ISCLOSED != value))
				{
					this.OnISCLOSEDChanging(value);
					this.SendPropertyChanging();
					this._ISCLOSED = value;
					this.SendPropertyChanged("ISCLOSED");
					this.OnISCLOSEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPENTIME", DbType="BigInt NOT NULL")]
		public long OPENTIME
		{
			get
			{
				return this._OPENTIME;
			}
			set
			{
				if ((this._OPENTIME != value))
				{
					this.OnOPENTIMEChanging(value);
					this.SendPropertyChanging();
					this._OPENTIME = value;
					this.SendPropertyChanged("OPENTIME");
					this.OnOPENTIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLOSETIME", DbType="BigInt")]
		public System.Nullable<long> CLOSETIME
		{
			get
			{
				return this._CLOSETIME;
			}
			set
			{
				if ((this._CLOSETIME != value))
				{
					this.OnCLOSETIMEChanging(value);
					this.SendPropertyChanging();
					this._CLOSETIME = value;
					this.SendPropertyChanged("CLOSETIME");
					this.OnCLOSETIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(100)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SYNCSTATUSFLAG", DbType="Int NOT NULL")]
		public int SYNCSTATUSFLAG
		{
			get
			{
				return this._SYNCSTATUSFLAG;
			}
			set
			{
				if ((this._SYNCSTATUSFLAG != value))
				{
					this.OnSYNCSTATUSFLAGChanging(value);
					this.SendPropertyChanging();
					this._SYNCSTATUSFLAG = value;
					this.SendPropertyChanged("SYNCSTATUSFLAG");
					this.OnSYNCSTATUSFLAGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATENUM", DbType="BigInt NOT NULL")]
		public long UPDATENUM
		{
			get
			{
				return this._UPDATENUM;
			}
			set
			{
				if ((this._UPDATENUM != value))
				{
					this.OnUPDATENUMChanging(value);
					this.SendPropertyChanging();
					this._UPDATENUM = value;
					this.SendPropertyChanged("UPDATENUM");
					this.OnUPDATENUMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
